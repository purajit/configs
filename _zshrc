eval "$(/opt/homebrew/bin/brew shellenv)"
export PATH="$HOME/.config/emacs/bin:$HOME/code/gitstack:$PATH"

if [ "$TMUX" = "" ]; then
  tmux new-session -A -s main
fi

# zsh syntax highlighting; make -/-- options dimmer
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets regexp)
typeset -A ZSH_HIGHLIGHT_REGEXP
ZSH_HIGHLIGHT_REGEXP+=(' -{1,2}[a-zA-Z0-9_-]*' fg=244)
source "$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# run-help is alias'd to man by default; change it so we can get zsh builtins
[ "$(type -w run-help)" = 'run-help: alias' ] && unalias run-help
autoload run-help
HELPDIR="/usr/share/zsh/${ZSH_VERSION}/help"

# activate venv_manager, and prevent venvs from modifying prompt
source "$HOME/code/venv_manager/venv_manager.plugin.zsh"
export VIRTUAL_ENV_DISABLE_PROMPT=1
autoload -Uz add-zsh-hook
add-zsh-hook chpwd venv_manager_switch_venv

# completions, and case-insensitive at that
autoload -U compinit
# https://gist.github.com/ctechols/ca1035271ad134841284#gistcomment-2767420
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
   compinit;
else
  compinit -C;
fi;
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
eval "$(fzf --zsh)"
autoload -U +X bashcompinit && bashcompinit  # for `complete`
complete -C "$(which aws_completer)" aws

# tools and hooks - atuin, direnv, asdf, vivid colors for ls
eval "$(atuin init zsh)"
eval "$(direnv hook zsh)"
source "$(brew --prefix asdf)/libexec/asdf.sh"
export LS_COLORS="$(vivid generate lava)"

# rust
if [[ -f "$HOME/.cargo/env" ]]; then
  . "$HOME/.cargo/env"
fi

source "$HOME/.aliases"
source "$HOME/.work"

# zsh prompts
function get_aws_profile_prompt {
    if [[ "$AWS_PROFILE" == "" ]]; then
        return
    fi
    echo " | %F{yellow} $(echo "$AWS_PROFILE" | cut -d- -f2-)%F{reset}"
}

function get_k8s_context_prompt {
    if [[ ! -f ~/.kube/config ]]; then
        return
    fi
    local k8s_context=$(sed -n "s/^current-context: \(.*\)$/\1/p" ~/.kube/config)
    if [[ "$k8s_context" == "" ]]; then
        return
    fi
    echo " | %F{blue}󱃾 $(echo "$k8s_context" | cut -d- -f1)"
}

function get_venv_prompt {
    echo "$VIRTUAL_ENV_PROMPT" | perl -ne "s/(..*)/ | %F{#336c9d} \1%F{reset}/g; print"
}

function git_current_branch() {
  local ref
  ref=$(git symbolic-ref --quiet HEAD 2> /dev/null)
  if [[ $? != 0 ]]; then
    return
  fi
  echo "${ref#refs/heads/}"
}

function get_git_prompt {
    echo "$(git_current_branch | cut -d- -f2- | perl -ne "s/(..*)/ | %F{#3fb951} \1%F{reset}/g; print")"
}

setopt PROMPT_SUBST
PROMPT='
%F{#3fb951}%D{%H:%M:%S %Z}  '
RPROMPT='%F{#ffaf00}%~%F{reset}$(get_git_prompt)$(get_venv_prompt)$(get_aws_profile_prompt)$(get_k8s_context_prompt)'
